const {
  SlashCommandBuilder,
  EmbedBuilder,
  ActionRowBuilder,
  ButtonBuilder,
  ButtonStyle
} = require('discord.js');

module.exports = {
  data: new SlashCommandBuilder()
    .setName('help')
    .setDescription('Show Bible book abbreviations'),

  async execute(interaction) {
    const oldTestament = `
**Genesis** - gnâ€ƒâ€ƒ**Exodus** - exâ€ƒâ€ƒ**Leviticus** - lv  
**Numbers** - nmâ€ƒâ€ƒ**Deuteronomy** - dtâ€ƒâ€ƒ**Joshua** - jo  
**Judges** - jgsâ€ƒâ€ƒ**Ruth** - ruâ€ƒâ€ƒ**1 Samuel** - 1sm  
**2 Samuel** - 2smâ€ƒâ€ƒ**1 Kings** - 1kgsâ€ƒâ€ƒ**2 Kings** - 2kgs  
**1 Chronicles** - 1chrâ€ƒâ€ƒ**2 Chronicles** - 2chr  
**1 Esdras** - 1esdâ€ƒâ€ƒ**Ezra** - ezrâ€ƒâ€ƒ**Nehemiah** - neh  
**Tobit** - tbâ€ƒâ€ƒ**Judith** - jdtâ€ƒâ€ƒ**Esther** - est  
**1 Maccabees** - 1mcâ€ƒâ€ƒ**2 Maccabees** - 2mcâ€ƒâ€ƒ**Psalms** - ps  
**Job** - jbâ€ƒâ€ƒ**Proverbs** - prvâ€ƒâ€ƒ**Ecclesiastes** - eccl  
**Song of Songs** - sgâ€ƒâ€ƒ**Wisdom** - wsâ€ƒâ€ƒ**Sirach** - sir  
**Hosea** - hosâ€ƒâ€ƒ**Amos** - amâ€ƒâ€ƒ**Micah** - mi  
**Joel** - jlâ€ƒâ€ƒ**Obadiah** - obâ€ƒâ€ƒ**Jonah** - jon  
**Nahum** - naâ€ƒâ€ƒ**Habakkuk** - hbâ€ƒâ€ƒ**Zephaniah** - zep  
**Haggai** - hgâ€ƒâ€ƒ**Zechariah** - zecâ€ƒâ€ƒ**Malachi** - mal  
**Isaiah** - isâ€ƒâ€ƒ**Jeremiah** - jerâ€ƒâ€ƒ**Baruch** - bar  
**Lamentations** - lamâ€ƒâ€ƒ**Epistle of Jeremiah** - eoj  
**Ezekiel** - ezâ€ƒâ€ƒ**Daniel** - dnâ€ƒâ€ƒ**Prayer of Manasseh** - poman
`;

    const newTestament = `
**Matthew** - mtâ€ƒâ€ƒ**Mark** - mkâ€ƒâ€ƒ**Luke** - lkâ€ƒâ€ƒ**John** - jn  
**Acts** - actsâ€ƒâ€ƒ**Romans** - româ€ƒâ€ƒ**1 Corinthians** - 1cor  
**2 Corinthians** - 2corâ€ƒâ€ƒ**Galatians** - galâ€ƒâ€ƒ**Ephesians** - eph  
**Philippians** - philâ€ƒâ€ƒ**Colossians** - colâ€ƒâ€ƒ**1 Thessalonians** - 1thes  
**2 Thessalonians** - 2thesâ€ƒâ€ƒ**1 Timothy** - 1tmâ€ƒâ€ƒ**2 Timothy** - 2tm  
**Titus** - tiâ€ƒâ€ƒ**Philemon** - phlmâ€ƒâ€ƒ**Hebrews** - heb  
**James** - jasâ€ƒâ€ƒ**1 Peter** - 1ptâ€ƒâ€ƒ**2 Peter** - 2pt  
**1 John** - 1jnâ€ƒâ€ƒ**2 John** - 2jnâ€ƒâ€ƒ**3 John** - 3jn  
**Jude** - judeâ€ƒâ€ƒ**Revelation** - rv
`;

    const embed1 = new EmbedBuilder()
      .setTitle('ðŸ“– Old Testament Abbreviations')
      .setDescription(oldTestament)
      .setColor('#b58d4f');

    const embed2 = new EmbedBuilder()
      .setTitle('ðŸ“˜ New Testament Abbreviations')
      .setDescription(newTestament)
      .setColor('#4f79b5');

    const buttons = new ActionRowBuilder().addComponents(
      new ButtonBuilder()
        .setCustomId('old')
        .setLabel('Old Testament')
        .setStyle(ButtonStyle.Primary)
        .setDisabled(true),
      new ButtonBuilder()
        .setCustomId('new')
        .setLabel('New Testament')
        .setStyle(ButtonStyle.Secondary)
    );

    const msg = await interaction.reply({ embeds: [embed1], components: [buttons], ephemeral: false, fetchReply: true });

    const collector = msg.createMessageComponentCollector({ time: 60000 });

    collector.on('collect', i => {
      if (i.customId === 'new') {
        buttons.components[0].setDisabled(false);
        buttons.components[1].setDisabled(true);
        i.update({ embeds: [embed2], components: [buttons] });
      } else if (i.customId === 'old') {
        buttons.components[0].setDisabled(true);
        buttons.components[1].setDisabled(false);
        i.update({ embeds: [embed1], components: [buttons] });
      }
    });

    collector.on('end', () => {
      buttons.components.forEach(btn => btn.setDisabled(true));
      msg.edit({ components: [buttons] }).catch(() => {});
    });
  }
};
